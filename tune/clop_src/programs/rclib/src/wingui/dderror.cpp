////////////////////////////////////////////////////////////////////////////
//
// dderror.cpp
//
// DDErrorFunction
//
// Remi Coulom
//
// October, 1999
//
////////////////////////////////////////////////////////////////////////////
#define STRICT
#include <ddraw.h>
#include <iostream>

using namespace std;

#include "dderror.h"
#include "debug.h"

void DDErrorFunction(HRESULT ddrval, const char *pszFile, int Line)
{
 switch(ddrval)
 {
#define CASE(X) case X: cerr << (#X) << '\n'; break;
  CASE(DDERR_ALREADYINITIALIZED)
  CASE(DDERR_CANNOTATTACHSURFACE)
  CASE(DDERR_CANNOTDETACHSURFACE)
  CASE(DDERR_CURRENTLYNOTAVAIL)
  CASE(DDERR_EXCEPTION)
  CASE(DDERR_GENERIC)
  CASE(DDERR_HEIGHTALIGN)
  CASE(DDERR_INCOMPATIBLEPRIMARY)
  CASE(DDERR_INVALIDCAPS)
  CASE(DDERR_INVALIDCLIPLIST)
  CASE(DDERR_INVALIDMODE)
  CASE(DDERR_INVALIDOBJECT)
  CASE(DDERR_INVALIDPARAMS)
  CASE(DDERR_INVALIDPIXELFORMAT)
  CASE(DDERR_INVALIDRECT)
  CASE(DDERR_LOCKEDSURFACES)
  CASE(DDERR_NO3D)
  CASE(DDERR_NOALPHAHW)
  CASE(DDERR_NOCLIPLIST)
  CASE(DDERR_NOCOLORCONVHW)
  CASE(DDERR_NOCOOPERATIVELEVELSET)
  CASE(DDERR_NOCOLORKEY)
  CASE(DDERR_NOCOLORKEYHW)
  CASE(DDERR_NODIRECTDRAWSUPPORT)
  CASE(DDERR_NOEXCLUSIVEMODE)
  CASE(DDERR_NOFLIPHW)
  CASE(DDERR_NOGDI)
  CASE(DDERR_NOMIRRORHW)
  CASE(DDERR_NOTFOUND)
  CASE(DDERR_NOOVERLAYHW)
  CASE(DDERR_NORASTEROPHW)
  CASE(DDERR_NOROTATIONHW)
  CASE(DDERR_NOSTRETCHHW)
  CASE(DDERR_NOT4BITCOLOR)
  CASE(DDERR_NOT4BITCOLORINDEX)
  CASE(DDERR_NOT8BITCOLOR)
  CASE(DDERR_NOTEXTUREHW)
  CASE(DDERR_NOVSYNCHW)
  CASE(DDERR_NOZBUFFERHW)
  CASE(DDERR_NOZOVERLAYHW)
  CASE(DDERR_OUTOFCAPS)
  CASE(DDERR_OUTOFMEMORY)
  CASE(DDERR_OUTOFVIDEOMEMORY)
  CASE(DDERR_OVERLAYCANTCLIP)
  CASE(DDERR_OVERLAYCOLORKEYONLYONEACTIVE)
  CASE(DDERR_PALETTEBUSY)
  CASE(DDERR_COLORKEYNOTSET)
  CASE(DDERR_SURFACEALREADYATTACHED)
  CASE(DDERR_SURFACEALREADYDEPENDENT)
  CASE(DDERR_SURFACEBUSY)
  CASE(DDERR_CANTLOCKSURFACE)
  CASE(DDERR_SURFACEISOBSCURED)
  CASE(DDERR_SURFACELOST)
  CASE(DDERR_SURFACENOTATTACHED)
  CASE(DDERR_TOOBIGHEIGHT)
  CASE(DDERR_TOOBIGSIZE)
  CASE(DDERR_TOOBIGWIDTH)
  CASE(DDERR_UNSUPPORTED)
  CASE(DDERR_UNSUPPORTEDFORMAT)
  CASE(DDERR_UNSUPPORTEDMASK)
  CASE(DDERR_VERTICALBLANKINPROGRESS)
  CASE(DDERR_WASSTILLDRAWING)
  CASE(DDERR_XALIGN)
  CASE(DDERR_INVALIDDIRECTDRAWGUID)
  CASE(DDERR_DIRECTDRAWALREADYCREATED)
  CASE(DDERR_NODIRECTDRAWHW)
  CASE(DDERR_PRIMARYSURFACEALREADYEXISTS)
  CASE(DDERR_NOEMULATION)
  CASE(DDERR_REGIONTOOSMALL)
  CASE(DDERR_CLIPPERISUSINGHWND)
  CASE(DDERR_NOCLIPPERATTACHED)
  CASE(DDERR_NOHWND)
  CASE(DDERR_HWNDSUBCLASSED)
  CASE(DDERR_HWNDALREADYSET)
  CASE(DDERR_NOPALETTEATTACHED)
  CASE(DDERR_NOPALETTEHW)
  CASE(DDERR_BLTFASTCANTCLIP)
  CASE(DDERR_NOBLTHW)
  CASE(DDERR_NODDROPSHW)
  CASE(DDERR_OVERLAYNOTVISIBLE)
  CASE(DDERR_NOOVERLAYDEST)
  CASE(DDERR_INVALIDPOSITION)
  CASE(DDERR_NOTAOVERLAYSURFACE)
  CASE(DDERR_EXCLUSIVEMODEALREADYSET)
  CASE(DDERR_NOTFLIPPABLE)
  CASE(DDERR_CANTDUPLICATE)
  CASE(DDERR_NOTLOCKED)
  CASE(DDERR_CANTCREATEDC)
  CASE(DDERR_NODC)
  CASE(DDERR_WRONGMODE)
  CASE(DDERR_IMPLICITLYCREATED)
  CASE(DDERR_NOTPALETTIZED)
  CASE(DDERR_UNSUPPORTEDMODE)
  CASE(DDERR_NOMIPMAPHW)
  CASE(DDERR_INVALIDSURFACETYPE)
  CASE(DDERR_DCALREADYCREATED)
  CASE(DDERR_CANTPAGELOCK)
  CASE(DDERR_CANTPAGEUNLOCK)
  CASE(DDERR_NOTPAGELOCKED)
  CASE(DDERR_NOTINITIALIZED)
#undef CASE
  //default: cerr << ddrval; break;
 }

 if (ddrval != DD_OK)
 {
  cerr << "In file " << pszFile << ", line " << Line << "\n\n";
  FATAL(1);
 }
}

